<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
@using Resources
@using IronSchool.WebSite.Helpers
<#
// "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
string boolType = "System.Boolean";
string dateType = "System.DateTime";
string[] numericTypes = new string[] {"System.Int16", "System.Int32", "System.Int64", "System.Decimal", "System.Float", "System.Double"};
Version requiredMvcVersion = new Version("5.2.4.0");
bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{ 
	ViewBag.Title = Resources.<#= ViewDataTypeShortName#>;
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-header">
            <h2>
                @ViewBag.Title
                <small>Create new</small>
                <small>@Html.ValidationSummary(true)</small>
            </h2>
        </div>

        <div class="card-body card-padding">
            <div class="row">
                <fieldset>
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation) {

        // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
        if (property.IsPrimaryKey && IsPropertyGuid(property)) {
            continue;
        }
       
        bool isCheckbox = property.TypeName.Equals(boolType);
        bool isBoolean = property.TypeName.Equals(boolType);
		bool isDateTime = property.TypeName.Equals(dateType);
		bool isNumeric = numericTypes.Contains(property.TypeName);
		if(isBoolean){#>
					@Html.FormFieldFor(m => m.<#= property.PropertyName #>, 4)
<#      }
		if(isDateTime){
#>					@Html.FormFieldFor(m => m.<#= property.PropertyName #>, 4, new { @type="date"})
<#		}
		if(isNumeric){
#>					@Html.FormFieldFor(m => m.<#= property.PropertyName #>, 4, new { @type="number"})
<#		}
		if(!isDateTime && !isBoolean && !isNumeric){
#>					@Html.FormFieldFor(m => m.<#= property.PropertyName #>, 4)
<#      }
	}    
}
#>
				</fieldset>
                @Html.Submit(Resources.Resources.Save)
                @Html.ActionLink(Resources.Resources.Back, "Index", null, new { @class = "btn btn-default waves-effect" })
            </div>
        </div>
    </div>
}
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>